name: Publish

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install

      - name: Code Quality
        run: poetry run black . --check
        continue-on-error: true

      - name: Analyse with MyPy
        run: poetry run mypy src

      - name: Test with pytest
        run: poetry run pytest

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Set Poetry config
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        run: |
          poetry config pypi-token.pypi "$POETRY_PYPI_TOKEN_PYPI"

      - name: Build with Poetry
        run: poetry build

      - name: Publish with Poetry
        run: poetry publish
